{
  "openapi": "3.0.1",
  "info": {
    "title": "odatasample",
    "version": "1.0"
  },
  "paths": {
    "/v1/Books": {
      "get": {
        "tags": [
          "Books"
        ],
        "operationId": "GetBooks",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Returns only the selected properties. (ex. FirstName, LastName, City)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include only the selected objects. (ex. Childrens, Locations)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the response with OData filter queries.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of objects to return. (ex. 25)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of objects to skip in the current order (ex. 50)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Define the order by one or more fields (ex. LastModified)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/Books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "operationId": "GetBookById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/Customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomers",
        "parameters": [
          {
            "name": "$select",
            "in": "query",
            "description": "Returns only the selected properties. (ex. FirstName, LastName, City)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include only the selected objects. (ex. Childrens, Locations)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the response with OData filter queries.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of objects to return. (ex. 25)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Number of objects to skip in the current order (ex. 50)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Define the order by one or more fields (ex. LastModified)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Book": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "isbn": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "location": {
            "$ref": "#/components/schemas/Address"
          },
          "press": {
            "$ref": "#/components/schemas/Press"
          }
        }
      },
      "Category": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "Color": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ]
      },
      "Customer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "favoriteColor": {
            "$ref": "#/components/schemas/Color"
          },
          "homeAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "orders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Press": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        }
      }
    }
  }
}